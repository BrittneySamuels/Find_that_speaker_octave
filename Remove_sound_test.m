%% Read in the file%%[f,fs]=audioread('Obama2.wav');%%% Play original file%%sound(f,fs,16);%%% Plot both audio channels%%N = size(f,1); % Determine total number of samples in audio file%%figure;%%subplot(2,1,1);%%stem(1:N, f(:,1));%%title('Left Channel');%%subplot(2,1,2);%%stem(1:N, f(:,2));%%title('Right Channel');%%%% Plot the spectrum%%df = fs / N;%%w = (-(N/2):(N/2)-1)*df;%%y = fft(f(:,1), N) / N; % For normalizing, but not needed for our analysis%%y2 = fftshift(y);%%figure;%%plot(w,abs(y2));%%%% Design a bandpass filter that filters out between 700 to 12000 Hz%n = 7;%beginFreq = 700 / (fs/2);%endFreq = 12000 / (fs/2);%x = [beginFreq,endFreq];%y='low';%%[b,a] = butter(n,x,y);%%%% Filter the signal%fOut = filter(b, a, f);%%%% Construct audioplayer object and play%p = audioplayer(fOut, fs);%sound(f,fs,16);%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Read the speech file that contain the noise%%[x, fs]= audioread('Obama2.wav');%%len=length(x);%%% Apply simple averaging which help to reduce the intensity of the high frequency%% noise if contains%%%for i=1:2%%  for j=2:len-1%%      x(j,i)=(x(j-1,i) + x(j,i) + x(j+1,i))/3;%%  end%%end%%% Creating Gaussian window of size 20%%g = gausswin(20);%%% Apply convolution using Gaussian filter%%g = g/sum(g);%%y= conv(x(:,1), g, 'same');%%% Apply signal smoothing using Savitzky-Golay smoothing filter.%%result=sgolayfilt(y,1,17);%%% resultant signal can be write to the new file%%audiowrite('result.wav',result,fs);%%% plot the resultant and original signal%%plot(x);title('original');% Read in the file%[f,fs]=audioread('result.wav');%%[y,fs]=audioread('Obama2.wav');%% Play original file%%sound(f,fs,16);%plot(f);title('new');%%plot(y);title('old')%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%[z,fs,nb]=wavread('Obama2.wav'); %bfil=fft(z); %fft of input signal%wn=[4000 8000]/(fs/2);   %bandpass%[b,a]=butter(6,wn);%%fvtool(b,a);%f=filter(b,a,z);%afil=fft(f);%subplot(2,1,1);%plot(real(bfil));%title('frequency respones of input signal');%xlabel('frequency');%ylabel('magnitude');%subplot(2,1,2);%plot(real(afil));%title('frequency respones of filtered signal');%xlabel('frequency');%ylabel('magnitude');%%%Get the filtered samples%filtered_samples = ifft(afil);%wavwrite (filtered_samples, fs, 'Obama2filtertest.wav');%[y,fs]=wavread('Obama2filtertest.wav');%sound(y,fs,16);